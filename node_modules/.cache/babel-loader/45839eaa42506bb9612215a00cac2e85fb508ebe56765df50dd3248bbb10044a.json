{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sources\\\\Mart\\\\Tests\\\\release\\\\test-react-intrasense\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport Container from 'react-bootstrap/Container';\nimport PostCollection from '../components/postCollection';\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const fetchComments = async () => {\n    const data = await fetch('https://jsonplaceholder.typicode.com/comments');\n    const comments = await data.json();\n    return comments;\n  };\n  useEffect(() => {\n    const fetchPosts = async () => {\n      //posts read\n      const data = await fetch('https://jsonplaceholder.typicode.com/posts');\n      const posts = await data.json();\n      //comments read\n      const comments = await fetchComments();\n      //comments count by post id\n      posts.forEach(post => post.commentsCount = comments.filter(comment => comment.postId === post.id).length);\n      setPosts(posts);\n      setFilteredPosts(posts);\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3 mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"Rechercher...\",\n        onChange: event => setFilteredPosts(posts.filter(post => post.body.replace(/(\\r\\n|\\n|\\r)/gm, \" \").includes(event.target.value)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [/*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"secondary\",\n        children: [filteredPosts.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \" posts sur \", /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"secondary\",\n        children: [posts.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostCollection, {\n      elements: filteredPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"q6K2sNFS1sq4esghSX4PZ2EcyPU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Container","PostCollection","React","useState","useEffect","Form","InputGroup","Badge","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","filteredPosts","setFilteredPosts","fetchComments","data","fetch","comments","json","fetchPosts","forEach","post","commentsCount","filter","comment","postId","id","length","children","className","Control","placeholder","onChange","event","body","replace","includes","target","value","fileName","_jsxFileName","lineNumber","columnNumber","bg","elements","_c","$RefreshReg$"],"sources":["C:/Sources/Mart/Tests/release/test-react-intrasense/src/pages/home.js"],"sourcesContent":["import Container from 'react-bootstrap/Container';\r\nimport PostCollection from '../components/postCollection';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nconst Home = () => {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [filteredPosts, setFilteredPosts] = useState([]);\r\n\r\n  const fetchComments = async () => {\r\n    const data = await fetch('https://jsonplaceholder.typicode.com/comments');\r\n    const comments = await data.json();\r\n    return comments;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      //posts read\r\n      const data = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n      const posts = await data.json();\r\n      //comments read\r\n      const comments = await fetchComments();\r\n      //comments count by post id\r\n      posts.forEach(post => post.commentsCount = \r\n        comments.filter(comment => comment.postId === post.id).length);\r\n      setPosts(posts);\r\n      setFilteredPosts(posts);\r\n    }\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <InputGroup className=\"mb-3 mt-3\">\r\n        <Form.Control placeholder=\"Rechercher...\" onChange={(event) => \r\n            setFilteredPosts(posts.filter(post => post.body.replace(/(\\r\\n|\\n|\\r)/gm, \" \").includes(event.target.value)))} />\r\n      </InputGroup>\r\n      <h6>\r\n        <Badge bg=\"secondary\">{filteredPosts.length} </Badge> posts sur <Badge bg=\"secondary\">{posts.length} </Badge>\r\n      </h6>\r\n      <PostCollection elements={filteredPosts} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}